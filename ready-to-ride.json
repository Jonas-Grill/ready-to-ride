{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.1",
    "title": "Ready to Ride",
    "description": "An API to manage the Ready to Ride stable."
  },
  "servers": [
    {
      "url": "https://ready-to-ride.tk"
    }
  ],
  "paths": {
    "/horses": {
      "get": {
        "description": "Returns all horses from the system that the user has access to.\n",
        "operationId": "findHorses",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age",
            "in": "query",
            "description": "age to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "colour",
            "in": "query",
            "description": "colour to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "height to filter by",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "race",
            "in": "query",
            "description": "race to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "difficulty_level",
            "in": "query",
            "description": "difficulty_level to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "horse response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Horse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new horse in the stable. Duplicates are allowed",
        "operationId": "addHorse",
        "requestBody": {
          "description": "Horse to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Horse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "horse response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Horse"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/horses/{id}": {
      "get": {
        "description": "Returns a horse based on a single ID, if the user has access to the horse",
        "operationId": "find horse by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of horse to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "example": "611d5cd230dd29fc60df7b94"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "horse response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Horse"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single horse based on the ID supplied",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to delete",
            "required": true,
            "schema": {
              "type": "string",
              "example": "611d5cd230dd29fc60df7b94"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "pet deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Example: \n> Authorization: Bearer <token>",
        "x-last-modified": 1652697126238
      }
    },
    "schemas": {
      "Ex": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Horse"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Horse": {
        "type": "object",
        "required": [
          "name",
          "height",
          "age",
          "colour",
          "description",
          "race",
          "difficulty_level"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "example": "611d5cd230dd29fc60df7b94"
          },
          "name": {
            "type": "string",
            "example": "Winny"
          },
          "height": {
            "type": "number",
            "example": 145
          },
          "race": {
            "type": "string",
            "enum": [
              "Quarterhorse",
              "Deutsches Reitpony",
              "Friesenpferde",
              "Haflinger",
              "Hannoveraner",
              "Holsteiner Pferde",
              "Islandpferde",
              "Oldenburger",
              "Pura Raza Espanola"
            ],
            "example": "Pura Raza Espanola"
          },
          "age": {
            "type": "number",
            "example": 8
          },
          "description": {
            "type": "string",
            "example": "Das ist ein tolles Pferd."
          },
          "colour": {
            "type": "string",
            "enum": [
              "Red Roan",
              "Blue Roan",
              "Rappe",
              "Fuchs",
              "Palomino",
              "Braun",
              "Schimmel",
              "Schecke"
            ],
            "example": "Blue Roan"
          },
          "difficulty_level": {
            "type": "string",
            "enum": [
              "Anfänger",
              "Amateur",
              "Fortgeschritten",
              "Profi"
            ]
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "611d5cd230dd29fc60df7b94"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "name",
          "age",
          "description"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "example": "611d5cd230dd29fc60df7b94"
          },
          "name": {
            "type": "string",
            "example": "Horst"
          },
          "age": {
            "type": "number",
            "example": 40
          },
          "description": {
            "type": "string",
            "example": "Das ist ein toller Trainer."
          },
          "achievements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "year": {
                  "type": "number",
                  "example": 2012
                },
                "name": {
                  "type": "string",
                  "example": "Deutscher Meister Senior Reining"
                }
              }
            }
          },
          "certificates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "year": {
                  "type": "number",
                  "example": 2012
                },
                "name": {
                  "type": "string",
                  "example": "Pferdewirtschaftsmeister"
                }
              }
            }
          },
          "focus": {
            "type": "string",
            "enum": [
              "Kinder",
              "Erwachsene",
              "Turnierreiter",
              "Anfänger",
              "Fortgeschrittene"
            ]
          }
        }
      },
      "Stable": {
        "type": "object",
        "required": [
          "name",
          "description",
          "arena_count"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "example": "611d5cd230dd29fc60df7b94"
          },
          "name": {
            "type": "string",
            "example": "Ready to Ride"
          },
          "description": {
            "type": "string",
            "example": "Dies ein toller Stall des."
          },
          "arena_count": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "boxes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Deluxe Box"
                },
                "price": {
                  "type": "number",
                  "example": 700
                },
                "size": {
                  "type": "number",
                  "example": 5.5
                },
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "News": {},
      "Booking": {
        "type": "object",
        "required": [
          "timeslot",
          "customer"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "example": "611d5cd230dd29fc60df7b94"
          },
          "timeslot": {
            "type": "object",
            "required": [
              "start_time",
              "end_time"
            ],
            "properties": {
              "start_time": {
                "type": "string",
                "format": "date-time",
                "example": "2015-10-26T07:46:36.611Z"
              },
              "end_time": {
                "type": "string",
                "format": "date-time",
                "example": "2015-10-26T09:46:36.611Z"
              }
            }
          },
          "booker": {
            "type": "string",
            "example": "Anne"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}